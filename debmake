#!/bin/sh

if [ ! -d .git ] ; then
    echo This script only works with git repos >&2
    exit 1
fi

PDIR=$(dirname `pwd`)

PKGNAME=$(basename `pwd`)
VERSION_FULL=`dpkg-parsechangelog -c1 | grep Version | cut "-d " -f 2`
TMP="echo $VERSION_FULL | tr '-' '\\n'"
if [ "`eval $TMP | wc -l`" = "1" ] ; then
    REVISION=""
    VERSION=$VERSION_FULL
else
    REVISION=`eval $TMP | tail -1`
    VERSION=`eval $TMP | head -n -1 | tr '\n' '-'`
    VERSION=${VERSION%?} # get rid of extra dash at end
fi
unset TMP

BUILDDIR="$PDIR/build"
NEWSRCDIR="$BUILDDIR/$PKGNAME"

if [ -d "$BUILDDIR" ] ; then
    rm -rf "$BUILDDIR" #debian wants to do a completely clean build anyway
    #maybe should do some checking to see if we actually need to regen
    #everything, but for this package it doesn't take that much time anyway
fi

mkdir -p "$NEWSRCDIR" #will also create BUILDDIR if necessary

#perhaps I should do something here that would include changes in the working
#copy as opposed to only the last commit, but not necessary now.  I guess
#workflow for now is use git commit --amend and not worry about it.
git archive master | tar -x -C "$NEWSRCDIR"

cd "$BUILDDIR"
tar -cf "${PKGNAME}_$VERSION.orig.tar" `basename "$NEWSRCDIR"`
gzip "${PKGNAME}_$VERSION.orig.tar"

cd "$NEWSRCDIR"
debuild

